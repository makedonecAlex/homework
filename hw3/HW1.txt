2.Что ткое HTTP и HTTPS

	Аббревиатура HTTP расшифровывается как HyperText Transfer Protocol, "протокол передачи гипертекста".

	HTTP - широко распространнеый протокол передачи данных, изначально предназначенный для гипертекстовых документов, то есть документов, которые могут содержать ссылки, ползволяющие организовать переход к другим документам.
 
	HTTPS (Hypertext Transport Protocol Secure) - это протокол, который обеспечивает конфиденциальность обмена данными между сайтом и пользовательским устройством.Безопастность информации обеспечивается за счет использования криптографических протоколов SSL/TLS, имеющих 3 уровня защиты:
			- Шифрование данных позволяет избежать их перехвата;
			- Сохранность данных - любое изменение данных фиксируется;
			- Аутентификация защищает от перенаправления пользователя.

3.HTTP методы

	Метод HTTP - последовательность из любых символов, кроме управляющих и разделителей, указывающая на основную операцию над ресурсом. Обычно метод представляет собой короткое анг. слово, записанное заглавными буквами. Название метоода чувствительно к регистру.
	Сервер может использовать любые методы, не существует обязательных методов для сервера или клиента. 
	GET - запрашивает представление ресурса. Запросы с использованием этого метода могут только извлекать данные.
	HEAD - запрашивает ресурс так же, как и метод GET, но без тела ответа.
	POST - используется для отправки сущностей к определенному ресурсу. Часто вызывает изменение состояния или какие-то побочные эффекты на сервере.
	PUT - заменяет все текущие представления ресурса данными запроса.
	DELET - удаляет указанный ресурс.
	CONNECT - устанвляивает "туннель" к сервер, определенному по ресурсу.
	OPTIINS - исползьуется дл описания параметров соединения с ресурсом.
	TRACE - выполняет вызов возвращаемого тестового сообщения с ресурса.
	PATCH - используется для частичного изменения ресурса.

4. HTTP статус коды сервера

	Код ответа (состояния) HTTP показывает, был ли успешно выполнен определенный HTTP запрос. Коды сгруппированы в 5 классов:
	1. Информационные 100-199
	2. Успешные 200-299
	3. Перенаправленные 300-399
	4. Клиентские ошибки 400-499
	5. Серверные ошибки 500-599

5. Что такое ядро браузера

	Ядро браузера можно разделить на две части: движок рендеринга (инженер макета или движок рендеринга) и движок JS. Он отвечает за получение содержимого веб-страницы (HTML, XML, изображения и тд), организацию инфрмации (направление, добавление CSS и тд) и расчет режима отображения веб-страницы, а затем вывод ее на монитор и принтер. Разница в ядре браузера будет по-разному интерпретировать синтаксис веб-страницы, поэтому эффект рендеринга будет другим. Ядра браузера можно разделить на пять типов: Trident, Gecko, Presto, Webkit, Blink.

6. Какие браузеры какие ядра используют

	Trider - проприетарный движок Microsoft Internet Explorer.
	EdgeHTML - движок от компании Microsoft для ее браузера Microsoft Edge.Является ответвлением Trident.

	Blink - движок браузера  Chromium, браузера Google Chrome с 28 версии, Microsoft Edge с 79 версии, Opera с 15 версии и Vivaldi. Он является ответвлением WebKit.

	Gecko - открытый движок проекта Mozilla; используется в большом числе программ, основанных на коде Mozilla (браузер Firefox, почтовом клиенте Thuderbird, наборе программ SeaMonkey)

	WebKit - движок для браузера Apple Safari, включенного в операционную систему Mac OS X, и браузера Google Chrome (до 2013). Встроен в библиотеку Qt (начиная с Qt 5.6 признан устаревшим).

	KHTML - разработан в рамках проекта KDE, используется в браузере Konqueror и послужил основой для WebKit

7. Что такое API

	АPI (Application programming interface) - это контракт, который предоставляет программа.
Специальный протокол для взаимодействия компьютерных программ, который позволяет использовать функции одного приложения внутри другого.
	Метод, который приложение предоставляет внешним пользователям для коммуникации с ним.

8. Что такое ендпоинты

	endpoint - конечная точка связи - это тип узла сети связи
	Это само обращение к маршруту отдельным HTTP методом. Эндпоинт выполняет конкретную задачу, принимают параметры и возвращают данные клиенту.

9.	URL (URI, URL, URN)

	URL  - унифицированный определитель местонахождения ресурса (uniform resource locator). Позволяет полностью узнать: как, кому и где можно достать требуемый ресурс, вводя понятия схемы, данных авторизации и местонахождения.
	URN - унифицированное имя ресурса (uniform respource name). Неизменяемая последовательность символов определяющая только имя некоторого ресурса (/2009/09/uri-url-urn.html).
	URI - унифицированный идентификатор ресурса (uniform resouce identifier). Обобщенное понятие идентификации ресурса. Включает в себя URL и URN, вместе и по отдельности.

10.Идемпотентные HTTP методы

	




